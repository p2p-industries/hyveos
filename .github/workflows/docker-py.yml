name: Docker Base image

on:
  push:
    branches: ["main"]
    paths:
      - "sdks/python/**/*"
      - "**.proto"
      - "demo/garden/**"
      - ".github/workflows/docker-py.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "sdks/python/**/*"
      - "**.proto"
      - "demo/garden/**"
      - ".github/workflows/docker-py.yml"

env:
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-base-image:
    name: Build and Push base image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      IMAGE_NAME: ${{ github.repository }}-base-python

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@fb28c93772363301b8d0a6072ce850224b73f74e # 0.5.0
        with:
          key: docker-base-image

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: sdks/python/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ github.ref == 'refs/heads/main' && steps.meta.outputs.labels || github.ref }}
          platforms: linux/amd64,linux/aarch64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  build-garden-image:
    name: Build and push garden images
    runs-on: ubuntu-latest
    needs: build-base-image

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: pump
            context: demo/garden/pump
          - image: plant
            context: demo/garden/plant

    env:
      IMAGE_NAME: ${{ github.repository }}-${{ matrix.image }}
      PR_NAME: pr-${{ github.event.number || 'main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@fb28c93772363301b8d0a6072ce850224b73f74e # 0.5.0
        with:
          key: docker-garden-${{ matrix.image }}-image

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ github.ref == 'refs/heads/main' && steps.meta.outputs.labels || github.ref }}
          platforms: linux/amd64,linux/aarch64
          build-args: BRANCH=${{ github.event_name == 'pull_request' && env.PR_NAME || 'main' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
