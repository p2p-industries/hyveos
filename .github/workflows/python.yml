name: Python SDK

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-24.04
    outputs:
      python: ${{ steps.filter.outputs.python }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request' }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            python:
              - 'protos/**'
              - 'scripts/**'
              - 'sdks/python/**'
              - '.github/workflows/python.yml'

  build:
    runs-on: ubuntu-24.04
    needs: changes
    if: ${{ needs.changes.outputs.python == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
        working-directory: sdks/python/hyveos_sdk

      - name: Check formatting is correct
        working-directory: sdks/python/hyveos_sdk
        run: poetry run ruff format --check

      - name: Check linting is correct
        working-directory: sdks/python/hyveos_sdk
        run: poetry run ruff check

      - name: Check if compiled protobuf is up-to-date
        working-directory: sdks/python/hyveos_sdk
        run: |
          mkdir proto-check
          poetry run python -m grpc_tools.protoc -I../../../protos --python_out=./proto-check --pyi_out=./proto-check --grpc_python_out=./proto-check ../../../protos/script.proto
          ../../../scripts/fix_grpc_imports.sh ./proto-check
          diff -r --exclude='__init__.py' ./proto-check ./protocol

  test-completed:
    name: Wait for test completion (Python)
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    needs: [changes, build]
    if: always()
    steps:
      - name: Fail if prerequisite failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
      - run: echo "Complete"
