name: Docker image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-image:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    name: Build container image for ${{ matrix.name }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Frontend & Backend
            context: .
            file: endpoint/ws-graph/Dockerfile
            image: ws-graph
          - name: Frontend & Backend + Faker
            context: .
            file: endpoint/ws-graph/Dockerfile
            image: ws-graph-faker
            arg:
              - EXTRA_FEATURES=faker
          - name: Data collector
            context: .
            file: endpoint/data-collector/Dockerfile
            image: data-collector
    env:
      IMAGE_NAME: ${{ github.repository }}-${{ matrix.image }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@fb28c93772363301b8d0a6072ce850224b73f74e # 0.5.0
        with:
          key: docker-frontend-${{ matrix.image }}-image

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}

      - name: Build and push ${{ matrix.name }}
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          build-args: ${{toJSON(matrix.arg) }}
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ github.ref == 'refs/heads/main' && steps.meta.outputs.labels || github.ref }}
          platforms: linux/amd64,linux/aarch64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
